pipeline {
  agent any
  triggers {
    githubPush()
  }
  stages {
    stage('Firewall') {
      steps {
       sh '''
        for f in $(git diff --name-only HEAD HEAD~1 | grep PORT); do
         lb_1=$(mktemp)
         lb_2=$(mktemp)
         fw=$(mktemp)
         s_protocol=$(mktemp)
         s_port=$(mktemp)
         lb_name=$(mktemp)
         lb_protocol=$(mktemp)
         lb_ip=$(mktemp)
         lb_ip_count=$(mktemp)
         lb_port=$(mktemp)
         fw_protocol=$(mktemp)
         fw_ip=$(mktemp)
         fw_port=$(mktemp)
         /var/jenkins_home/.local/bin/yq e '.ports[] | select(.type == "system") | .protocol' PORT > $s_protocol
         /var/jenkins_home/.local/bin/yq e '.ports[] | select(.type == "system") | .port' PORT > $s_port
         /var/jenkins_home/.local/bin/yq e '.ports[] | select(.type == "loadbalancer") | .name' PORT > $lb_name
         /var/jenkins_home/.local/bin/yq e '.ports[] | select(.type == "loadbalancer") | .protocol' PORT > $lb_protocol
         /var/jenkins_home/.local/bin/yq e '.ports[] | select(.type == "loadbalancer") | .hosts[]' PORT > $lb_ip
         /var/jenkins_home/.local/bin/yq e '.ports[] | select(.type == "loadbalancer") | .hosts | length' PORT > $lb_ip_count
         /var/jenkins_home/.local/bin/yq e '.ports[] | select(.type == "loadbalancer") | .port' PORT > $lb_port
         /var/jenkins_home/.local/bin/yq e '.ports[] | select(.type == "firewall") | .protocol' PORT > $fw_protocol
         /var/jenkins_home/.local/bin/yq e '.ports[] | select(.type == "firewall") | .hosts[]' PORT > $fw_ip
         /var/jenkins_home/.local/bin/yq e '.ports[] | select(.type == "firewall") | .port' /PORT > $fw_port
         readarray -t s_protocols <$s_protocol
         readarray -t s_ports <$s_port
         readarray -t lb_names <$lb_name
         readarray -t lb_protocols <$lb_protocol
         readarray -t lb_ips <$lb_ip
         readarray -t lb_ipc <$lb_ip_count
         readarray -t lb_ports <$lb_port
         readarray -t fw_protocols <$fw_protocol
         readarray -t fw_ips <$fw_ip
         readarray -t fw_ports <$fw_port
         sed -i "/ -p tcp --dport /d" Firewall/before.rules
         sed -i "30,\$d" LoadBalancer/haproxy.cfg
         s1="-A PREROUTING -i enp4s0 -d 192\\.168\\.172\\.2 -p"
         s2="-j DNAT --to-destination"
         for (( i=0; i<${#s_ports[@]}; i++ )) do
          echo "-A ufw-before-input -p ${s_protocols[$i]} --dport ${s_ports[$i]} -j ACCEPT" >> $lb_1
         done
         lb_ip_current=0
         lb_ip_last=0
         for (( i=0; i<${#lb_ports[@]}; i++ )) do
          echo "-A ufw-before-input -p ${lb_protocols[$i]} --dport ${lb_ports[$i]} -j ACCEPT" >> $lb_1
          echo "frontend ${lb_names[$i]}" >> $lb_2
          echo "    bind 172.16.0.1:${lb_ports[$i]}" >> $lb_2
          echo "    mode ${lb_protocols[$i]}" >> $lb_2
          echo "    default_backend ${lb_names[$i]}" >> $lb_2
          echo "backend ${lb_names[$i]}" >> $lb_2
          echo "    mode tcp" >> $lb_2
          echo "    balance roundrobin" >> $lb_2
          lb_ip_last=$(( $lb_ip_last + ${lb_ipc[$i]} ))
          for (( j=$lb_ip_current; j<$lb_ip_last; j++ )) do
           echo "    server $(echo $(nslookup ${lb_ips[$lb_ip_current]} 172.16.0.8) | awk '{print $4}' | awk -F '.' '{print $1}') ${lb_ips[$lb_ip_current]}:${lb_ports[$i]}" >> $lb_2
           lb_ip_current=$(( $lb_ip_current + 1 ))
          done
         done
         for (( i=0; i<${#fw_ports[@]}; i++ )) do
          echo "-A PREROUTING -i enp4s0 -d 192.168.172.2 -p ${fw_protocols[$i]} --dport ${fw_ports[$i]} -j DNAT --to-destination ${fw_ips[$i]}:${fw_ports[$i]}" >> $fw
         done
         sed -i "/o lo -j ACCEPT/r$lb_1" Firewall/before.rules
         sed -i "/PREROUTING ACCEPT \\[0:0\\]/r$fw" Firewall/before.rules
         sed -i "/\\# ghym/r$lb_2" LoadBalancer/haproxy.cfg
         rm -f $lb_1 $lb_2 $fw $s_protocol $s_port $lb_name $lb_protocol $lb_ip $lb_ip_count $lb_port $fw_protocol $fw_ip $fw_port
         git add Firewall/before.rules LoadBalancer/haproxy.cfg
         git commit -m "Firewall + LB updates "$(date +%s)
         git push ghym HEAD:main
         /var/jenkins_home/.local/bin/kubectl apply -f Kubernetes/Bind/config-map.yaml
#        for ports in $(sed -En "s/([0-9]{,5}):FW:.*/\\1/p" PORT); do
#         port=$(curl http://10.96.142.58/mysql/select_port.php?port=$ports)
#         if [ $port -eq 0 ]
#         then
#          server=$(cat PORT | grep ^$ports: | sed -e 's/[0-9]\\{,5\\}:FW:\\(.*\\)/\\1/')
#          ip=$(curl http://10.96.142.58/linux/nslookup.php?host=$server)
#          sed -i "s/\\#ghym/-A PREROUTING -i enp4s0 -d 192.168.172.2 -p tcp --dport $ports -j DNAT --to-destination $ip:$ports\\n\\#ghym/" Firewall/before.rules
#          curl 'http://10.96.142.58/mysql/insert_port.php?type=FW&port='$ports
#          git add Firewall/before.rules
#          git commit -m "Firewall with port: "$ports
#          eval "$(ssh-agent -s)"
#          ssh-add /var/jenkins_home/.ssh/jenkins-github-2
#          scp Firewall/before.rules max@172.16.0.1:/etc/ufw/before.rules
#          ssh max@172.16.0.1 'echo "123456" | sudo -S ufw reload'
#          git push ghym HEAD:main
#         fi
        done
       '''
      }
    }
  }
}
