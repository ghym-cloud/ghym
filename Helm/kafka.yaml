superUsers: User:ghym
sasl:
  enabledMechanisms: PLAIN,SCRAM-SHA-512
  client:
    users:
    - "ghym"
    - "971551659890"
    - "971551659896"
    - "971551659891"
    passwords:
    - "k@fk@"
    - "971551659890"
    - "971551659896"
    - "971551659891"
listeners:
  controller:
    protocol: PLAINTEXT
  advertisedListener: "CLIENT://:9092,CONTROLLER://:9093,INTERNAL://:9094"
  securityProtocolMap: "CLIENT:SASL_PLAINTEXT,CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT"
interBrokerProtocolVersion: "0"
extraConfig: "autoCreateTopicsEnable:false,deleteTopicEnable:true"
extraEnvVars:
- name: KAFKA_OPTS
  value: "-Djava.security.auth.login.config=/bitnami/kafka/data/kafka_jaas.conf"
- name: KAFKA_CFG_AUTHORIZER_CLASS_NAME
  value: "kafka.security.authorizer.AclAuthorizer"
controller:
  replicaCount: 0
broker:
  replicaCount: 1
  persistence:
    enabled: true
    storageClass: local-storage
zookeeper:
  enabled: true
  podSecurityContext:
    enabled: false
  containerSecurityContext:
    runAsUser: 0
    runAsNonRoot: false
    allowPrivilegeEscalation: true
  persistence:
    enabled: true
    storageClass: local-storage
kraft:
  enabled: false
extraDeploy:
- |
  apiVersion: v1
  kind: ConfigMap
  metadata:
    name: kafka-client-properties
    namespace: ghym
  data:
    client.properties: |
      security.protocol=SASL_PLAINTEXT
      sasl.mechanism=SCRAM-SHA-512
- |
  apiVersion: v1
  kind: ConfigMap
  metadata:
    name: kafka-jaas
    namespace: ghym
  data:
    kafka_jaas.conf: |
      KafkaClient {
      org.apache.kafka.common.security.scram.ScramLoginModule required
      username="ghym"
      password="k@fk@";
      };
      KafkaServer {
      org.apache.kafka.common.security.plain.PlainLoginModule required
      user_ghym="k@fk@"
      user_971551659890="971551659890"
      user_971551659896="971551659896"
      user_971551659891="971551659891"
      ;org.apache.kafka.common.security.scram.ScramLoginModule required;
      };
- |
    apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: kafka
      labels:
        type: local
        app.kubernetes.io/managed-by: Helm
      annotations:
        meta.helm.sh/release-namespace: ghym
        meta.helm.sh/release-name: kafka
    spec:
      storageClassName: local-storage
      capacity:
        storage: 8Gi
      accessModes:
      - ReadWriteOnce
      hostPath:
        path: /cephfs/kafka_data
- |
  apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: zookeeper
    labels:
      type: local
      app.kubernetes.io/managed-by: Helm
    annotations:
      meta.helm.sh/release-namespace: ghym
      meta.helm.sh/release-name: kafka
  spec:
    storageClassName: local-storage
    capacity:
      storage: 8Gi
    accessModes:
    - ReadWriteOnce
    hostPath:
      path: /cephfs/zookeeper_data
extraVolumeMounts:
- name: kafka-client-properties
  mountPath: /bitnami/kafka/config/client.properties
  subPath: client.properties
  readOnly: true
- name: kafka-jaas
  mountPath: /bitnami/kafka/data/kafka_jaas.conf
  subPath: kafka_jaas.conf
  readOnly: true
extraVolumes:
- name: kafka-client-properties
  configMap:
    name: kafka-client-properties
- name: kafka-jaas
  configMap:
    name: kafka-jaas

# helm -n ghym upgrade -i --atomic --debug --wait kafka bitnami/kafka -f Helm/kafka.yaml
